vars=matread("datForJulia.mat")

tc=PredictionConfig()
tc.io_conf=vars["pctrainConfigio_conf"];
tc.lock_conf=vars["pctrainConfiglock_conf"];
tc.transactionType=vars["pctrainConfigtransactionType"];
tc.groupingStrategy=vars["pctrainConfiggroupingStrategy"];
tc.initialized=vars["pctrainConfiginitialized"];
tc.configSummary=vars["pctrainConfigconfigSummary"];
tc.currentLockWait=vars["pctrainConfigcurrentLockWait"];
tc.lockWaitTime=vars["pctrainConfiglockWaitTime"];
tc.pagesFlushed=vars["pctrainConfigpagesFlushed"];
tc.TPS=vars["pctrainConfigTPS"];
tc.TPSUngrouped=vars["pctrainConfigTPSUngrouped"];
tc.transactionCount=vars["pctrainConfigtransactionCount"];
tc.averageCpuUsage=vars["pctrainConfigaverageCpuUsage"];

pc=PredictionCenter()
pc.TEST_MODE_MIXTURE_TPS=vars["pcTEST_MODE_MIXTURE_TPS"];
pc.TEST_MODE_DATASET=vars["pcTEST_MODE_DATASET"];
pc.NUM_TPS_SAMPLES=vars["pcNUM_TPS_SAMPLES"];
pc.testVar=vars["pctestVar"];
pc.taskName=vars["pctaskName"];
pc.workloadName=vars["pcworkloadName"];
pc.lockType=vars["pclockType"];
pc.learnLock=vars["pclearnLock"];
pc.whichTransactionToPlot=vars["pcwhichTransactionToPlot"];
pc.ioConf=vars["pcioConf"];
pc.lockConf=vars["pclockConf"];
pc.trainConfig=tc
pc.testMode=vars["pctestMode"];
pc.testConfig=vars["pctestConfig"];
pc.testMixture=vars["pctestMixture"];
pc.testMinTPS=vars["pctestMinTPS"];
pc.testMaxTPS=vars["pctestMaxTPS"];
pc.testWorkloadRatio=vars["pctestWorkloadRatio"];
pc.testSampleTPS=vars["pctestSampleTPS"];
pc.testSampleTransactionCount=vars["pctestSampleTransactionCount"];
pc.throttleLatencyType=vars["pcthrottleLatencyType"];
pc.throttleTargetLatency=vars["pcthrottleTargetLatency"];
pc.throttleTargetTransactionIndex=vars["pcthrottleTargetTransactionIndex"];
pc.throttlePenalty=vars["pcthrottlePenalty"];
pc.throttleIndividualTransactions=vars["pcthrottleIndividualTransactions"];
return 1
